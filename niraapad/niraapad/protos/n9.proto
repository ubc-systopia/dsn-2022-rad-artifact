syntax = "proto3";

service N9 {

  // Used for all static and class methods in class Serial
  rpc StaticMethod(StaticMethodReq) returns (StaticMethodResp) {}

  // Used for all static and class methods in class Serial
  rpc StaticMethodTrace(StaticMethodTraceMsg) returns (EmptyMsg) {}

  // Used for the __init__ method of class Serial
  rpc Initialize(InitializeReq) returns (InitializeResp) {}

  // Used for the __init__ method of class Serial
  rpc InitializeTrace(InitializeTraceMsg) returns (EmptyMsg) {}

  // Used for property getters in class Serial
  rpc DeviceSpecificGetter(DeviceSpecificGetterReq) returns (DeviceSpecificGetterResp) {}

  // Used for property getters in class Serial
  rpc DeviceSpecificGetterTrace(DeviceSpecificGetterTraceMsg) returns (EmptyMsg) {}

  // Used for property setters in class Serial
  rpc DeviceSpecificSetter(DeviceSpecificSetterReq) returns (DeviceSpecificSetterResp) {}

  // Used for property setters in class Serial
  rpc DeviceSpecificSetterTrace(DeviceSpecificSetterTraceMsg) returns (EmptyMsg) {}

  // Used for the remaining methods in class Serial
  rpc DeviceSpecificMethod(DeviceSpecificMethodReq) returns (DeviceSpecificMethodResp) {}

  // Used for the remaining methods in class Serial
  rpc DeviceSpecificMethodTrace(DeviceSpecificMethodTraceMsg) returns (EmptyMsg) {}
}

message StaticMethodReq {
  string method_name = 1;
  bytes args = 2;
  bytes kwargs = 3;
}

message StaticMethodResp {
  bytes resp = 1;
}

message StaticMethodTraceMsg {
  StaticMethodReq req = 1;
  StaticMethodResp resp = 2;
}

message InitializeReq {
  int32 device_id = 1;
  bytes args = 2;
  bytes kwargs = 3;
}

message InitializeResp {
}

message InitializeTraceMsg {
  InitializeReq req = 1;
  InitializeResp resp = 2;
}

message DeviceSpecificGetterReq {
  int32 device_id = 1;
  string property_name = 2;
}

message DeviceSpecificGetterResp {
  bytes resp = 1;
}

message DeviceSpecificGetterTraceMsg {
  DeviceSpecificGetterReq req = 1;
  DeviceSpecificGetterResp resp = 2;
}

message DeviceSpecificSetterReq {
  int32 device_id = 1;
  string property_name = 2;
  bytes value = 3;
}

message DeviceSpecificSetterResp {
}

message DeviceSpecificSetterTraceMsg {
  DeviceSpecificSetterReq req = 1;
  DeviceSpecificSetterResp resp = 2;
}

message DeviceSpecificMethodReq {
  int32 device_id = 1;
  string method_name = 2;
  bytes args = 3;
  bytes kwargs = 4;
}

message DeviceSpecificMethodResp {
  bytes resp = 1;
}

message DeviceSpecificMethodTraceMsg {
  DeviceSpecificMethodReq req = 1;
  DeviceSpecificMethodResp resp = 2;
}

// Trace header helps identify the trace length
message TraceHeader {
    // number of bytes in the following trace metadata
    int32 metadata_size = 1;
}

// Trace metadata helps identify the trace message type and its size
message TraceMetadata {
  string timestamp = 1;
  string trace_msg_type = 2;

  // number of bytes in the following trace msg
  // i.e., any message type above ending in "TraceMsg"
  int32 trace_msg_size = 3;
}

// Since gRPC does not allow defining RPC with void params / return values
message EmptyMsg {
}
